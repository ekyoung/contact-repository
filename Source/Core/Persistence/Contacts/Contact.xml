<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Contact" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://ibatis.apache.org/mapping">
  <alias>
    <typeAlias alias="Contact" type="EthanYoung.ContactRepository.Contacts.Contact, EthanYoung.ContactRepository"/>
    <typeAlias alias="PersistedContact" type="EthanYoung.ContactRepository.Persistence.Contacts.PersistedContact, EthanYoung.ContactRepository"/>
    <typeAlias alias="Name" type="EthanYoung.ContactRepository.Name, EthanYoung.ContactRepository"/>
    <typeAlias alias="ContactEmailAddress" type="EthanYoung.ContactRepository.Contacts.ContactEmailAddress, EthanYoung.ContactRepository"/>
    <typeAlias alias="ContactPhoneNumber" type="EthanYoung.ContactRepository.Contacts.ContactPhoneNumber, EthanYoung.ContactRepository"/>
  </alias>
  
  <typeHandlers>
  </typeHandlers>

  <resultMaps>
    <resultMap id="NameRM" class="Name">
      <constructor>
        <argument argumentName="first" column="FirstName"/>
        <argument argumentName="last" column="LastName"/>
      </constructor>
    </resultMap>
    <resultMap id="ContactRM" class="PersistedContact">
      <result property="Id" column="ContactId"/>
      <result property="Identifier" column="ContactIdentifier"/>
      <result property="Name" resultMapping="Contact.NameRM"/>
      <result property="PersistedEmailAddresses" column="ContactId" select="SelectContactEmailAddressesByContactId" />
      <result property="PersistedPhoneNumbers" column="ContactId" select="SelectContactPhoneNumbersByContactId" />
    </resultMap>
    <resultMap id="ContactEmailAddressRM" class="ContactEmailAddress">
      <result property="ContactId" column="ContactId"/>
      <result property="EmailAddress" column="EmailAddress"/>
      <result property="Nickname" column="Nickname"/>
      <result property="IsPrimary" column="IsPrimary"/>
    </resultMap>
    <resultMap id="ContactPhoneNumberRM" class="ContactPhoneNumber">
      <result property="ContactId" column="ContactId"/>
      <result property="PhoneNumber" column="PhoneNumber"/>
      <result property="Nickname" column="Nickname"/>
      <result property="IsPrimary" column="IsPrimary"/>
    </resultMap>
  </resultMaps>

  <parameterMaps>
    <parameterMap id="ContactPM" class="Contact">
      <parameter property="Identifier" column="ContactIdentifier" />
      <parameter property="Name.First" column="FirstName"/>
      <parameter property="Name.Last" column="LastName"/>
    </parameterMap>
    <parameterMap id="UpdateContactPM" class="Contact" extends="ContactPM">
      <parameter property="Id" column="ContactId"/>
    </parameterMap>
    <parameterMap id="ContactEmailAddressPM" class="ContactEmailAddress">
      <parameter property="ContactId" column="ContactId"/>
      <parameter property="EmailAddress" column="EmailAddress"/>
      <parameter property="Nickname" column="Nickname"/>
      <parameter property="IsPrimary" column="IsPrimary"/>
    </parameterMap>
    <parameterMap id="ContactPhoneNumberPM" class="ContactPhoneNumber">
      <parameter property="ContactId" column="ContactId"/>
      <parameter property="PhoneNumber" column="PhoneNumber"/>
      <parameter property="Nickname" column="Nickname"/>
      <parameter property="IsPrimary" column="IsPrimary"/>
    </parameterMap>
  </parameterMaps>

  <statements>
    <!-- Contacts -->
    <insert id="InsertContact" parameterMap="ContactPM">
      <generate table="Contacts" />
      <selectKey resultClass="long" type="post" property="Id">
        SELECT @@IDENTITY as value
      </selectKey>
    </insert>

    <update id="UpdateContact" parameterMap="UpdateContactPM">
      <generate table="Contacts" by="ContactId" />
    </update>

    <select id="SelectAllContacts" resultMap="ContactRM">
      SELECT *
      FROM Contacts (NOLOCK)
      ORDER BY LastName, FirstName
    </select>
    
    <select id="SelectContactByIdentifier" resultMap="ContactRM" parameterClass="string">
      SELECT *
      FROM Contacts (NOLOCK)
      WHERE ContactIdentifier = #value#
    </select>
  
    <delete id="DeleteContactByIdentifier" parameterClass="string">
      <![CDATA[
      DELETE ContactEmailAddresses
      FROM ContactEmailAddresses cea
      INNER JOIN Contacts c
        ON cea.ContactId = c.ContactId
      WHERE c.ContactIdentifier = #value#

      DELETE ContactPhoneNumbers
      FROM ContactPhoneNumbers cp
      INNER JOIN Contacts c
        ON cp.ContactId = c.ContactId
      WHERE c.ContactIdentifier = #value#

      DELETE FROM Contacts
      WHERE ContactIdentifier = #value#
      ]]>
    </delete>
  
    <!-- Contact Email Addresses-->
    <insert id="InsertContactEmailAddress" parameterMap="ContactEmailAddressPM">
      <generate table="ContactEmailAddresses" />
    </insert>
    
    <select id="SelectContactEmailAddressesByContactId" resultMap="ContactEmailAddressRM" parameterClass="long">
      SELECT *
      FROM ContactEmailAddresses
      WHERE ContactId = #value#
    </select>
    
    <delete id="DeleteContactEmailAddressesByContactId" parameterclass="long">
      DELETE FROM ContactEmailAddresses
      WHERE ContactId = #value#
    </delete>
  
    <!-- Contact Phone Numbers-->
    <insert id="InsertContactPhoneNumber" parameterMap="ContactPhoneNumberPM">
      <generate table="ContactPhoneNumbers" />
    </insert>
    
    <select id="SelectContactPhoneNumbersByContactId" resultMap="ContactPhoneNumberRM" parameterClass="long">
      SELECT *
      FROM ContactPhoneNumbers
      WHERE ContactId = #value#
    </select>
    
    <delete id="DeleteContactPhoneNumbersByContactId" parameterclass="long">
      DELETE FROM ContactPhoneNumbers
      WHERE ContactId = #value#
    </delete>
  </statements>
</sqlMap>